DEBUG: Creating account for inner0@spartaaceap.com...
INFO: loading browser...
runpy.py • _run_module_as_main • 196 • return _run_code(code, main_globals, None, ► runpy.py • _run_code • 86 • exec(code, run_globals) ► ipykernel_launcher.py • <module> • 17 • app.launch_new_instance() ► application.py • launch_instance • 978 • app.start() ► kernelapp.py • start • 712 • self.io_loop.start() ► asyncio.py • start • 215 • self.asyncio_loop.run_forever() ► base_events.py • run_forever • 600 • self._run_once() ► base_events.py • _run_once • 1896 • handle._run() ► events.py • _run • 80 • self._context.run(self._callback, *self._args) ► kernelbase.py • dispatch_queue • 510 • await self.process_one() ► kernelbase.py • process_one • 499 • await dispatch(*args) ► kernelbase.py • dispatch_shell • 406 • await result ► kernelbase.py • execute_request • 730 • reply_content = await reply_content ► ipkernel.py • do_execute • 383 • res = shell.run_cell( ► zmqshell.py • run_cell • 528 • return super().run_cell(*args, **kwargs) ► interactiveshell.py • run_cell • 3009 • result = self._run_cell( ► interactiveshell.py • _run_cell • 3064 • result = runner(coro) ► async_helpers.py • _pseudo_sync_runner • 129 • coro.send(None) ► interactiveshell.py • run_cell_async • 3269 • has_raised = await self.run_ast_nodes(code_ast.body, cell_name, ► interactiveshell.py • run_ast_nodes • 3448 • if await self.run_code(code, result, async_=asy): ► interactiveshell.py • run_code • 3508 • exec(code_obj, self.user_global_ns, self.user_ns) ► 903290931.py • <module> • 4 • g.initiateUser(email) ► GoogleWorkspace.py • initiateUser • 29 • debug(f"Creating account for {email}...") ► log.py • debug • 26 • log(f"DEBUG: {e}", p=False, caller=inspect.stack()) ►  => DEBUG: Creating account for inner1@spartaaceap.com... 
runpy.py • _run_module_as_main • 196 • return _run_code(code, main_globals, None, ► runpy.py • _run_code • 86 • exec(code, run_globals) ► ipykernel_launcher.py • <module> • 17 • app.launch_new_instance() ► application.py • launch_instance • 978 • app.start() ► kernelapp.py • start • 712 • self.io_loop.start() ► asyncio.py • start • 215 • self.asyncio_loop.run_forever() ► base_events.py • run_forever • 600 • self._run_once() ► base_events.py • _run_once • 1896 • handle._run() ► events.py • _run • 80 • self._context.run(self._callback, *self._args) ► kernelbase.py • dispatch_queue • 510 • await self.process_one() ► kernelbase.py • process_one • 499 • await dispatch(*args) ► kernelbase.py • dispatch_shell • 406 • await result ► kernelbase.py • execute_request • 730 • reply_content = await reply_content ► ipkernel.py • do_execute • 383 • res = shell.run_cell( ► zmqshell.py • run_cell • 528 • return super().run_cell(*args, **kwargs) ► interactiveshell.py • run_cell • 3009 • result = self._run_cell( ► interactiveshell.py • _run_cell • 3064 • result = runner(coro) ► async_helpers.py • _pseudo_sync_runner • 129 • coro.send(None) ► interactiveshell.py • run_cell_async • 3269 • has_raised = await self.run_ast_nodes(code_ast.body, cell_name, ► interactiveshell.py • run_ast_nodes • 3448 • if await self.run_code(code, result, async_=asy): ► interactiveshell.py • run_code • 3508 • exec(code_obj, self.user_global_ns, self.user_ns) ► 903290931.py • <module> • 4 • g.initiateUser(email) ► GoogleWorkspace.py • initiateUser • 30 • created = account.create() ► GoogleAccounts.py • create • 108 • info('loading browser...') ► log.py • info • 19 • log(f"INFO: {e}", p=False, caller=inspect.stack()) ►  => INFO: loading browser... 
runpy.py • _run_module_as_main • 196 • return _run_code(code, main_globals, None, ► runpy.py • _run_code • 86 • exec(code, run_globals) ► ipykernel_launcher.py • <module> • 17 • app.launch_new_instance() ► application.py • launch_instance • 978 • app.start() ► kernelapp.py • start • 712 • self.io_loop.start() ► asyncio.py • start • 215 • self.asyncio_loop.run_forever() ► base_events.py • run_forever • 600 • self._run_once() ► base_events.py • _run_once • 1896 • handle._run() ► events.py • _run • 80 • self._context.run(self._callback, *self._args) ► kernelbase.py • dispatch_queue • 510 • await self.process_one() ► kernelbase.py • process_one • 499 • await dispatch(*args) ► kernelbase.py • dispatch_shell • 406 • await result ► kernelbase.py • execute_request • 730 • reply_content = await reply_content ► ipkernel.py • do_execute • 383 • res = shell.run_cell( ► zmqshell.py • run_cell • 528 • return super().run_cell(*args, **kwargs) ► interactiveshell.py • run_cell • 3009 • result = self._run_cell( ► interactiveshell.py • _run_cell • 3064 • result = runner(coro) ► async_helpers.py • _pseudo_sync_runner • 129 • coro.send(None) ► interactiveshell.py • run_cell_async • 3269 • has_raised = await self.run_ast_nodes(code_ast.body, cell_name, ► interactiveshell.py • run_ast_nodes • 3448 • if await self.run_code(code, result, async_=asy): ► interactiveshell.py • run_code • 3508 • exec(code_obj, self.user_global_ns, self.user_ns) ► 903290931.py • <module> • 4 • g.initiateUser(email) ► GoogleWorkspace.py • initiateUser • 30 • created = account.create() ► GoogleAccounts.py • create • 111 • debug('waiting for signin') ► log.py • debug • 26 • log(f"DEBUG: {e}", p=False, caller=inspect.stack()) ►  => DEBUG: waiting for signin 
runpy.py • _run_module_as_main • 196 • return _run_code(code, main_globals, None, ► runpy.py • _run_code • 86 • exec(code, run_globals) ► ipykernel_launcher.py • <module> • 17 • app.launch_new_instance() ► application.py • launch_instance • 978 • app.start() ► kernelapp.py • start • 712 • self.io_loop.start() ► asyncio.py • start • 215 • self.asyncio_loop.run_forever() ► base_events.py • run_forever • 600 • self._run_once() ► base_events.py • _run_once • 1896 • handle._run() ► events.py • _run • 80 • self._context.run(self._callback, *self._args) ► kernelbase.py • dispatch_queue • 510 • await self.process_one() ► kernelbase.py • process_one • 499 • await dispatch(*args) ► kernelbase.py • dispatch_shell • 406 • await result ► kernelbase.py • execute_request • 730 • reply_content = await reply_content ► ipkernel.py • do_execute • 383 • res = shell.run_cell( ► zmqshell.py • run_cell • 528 • return super().run_cell(*args, **kwargs) ► interactiveshell.py • run_cell • 3009 • result = self._run_cell( ► interactiveshell.py • _run_cell • 3064 • result = runner(coro) ► async_helpers.py • _pseudo_sync_runner • 129 • coro.send(None) ► interactiveshell.py • run_cell_async • 3269 • has_raised = await self.run_ast_nodes(code_ast.body, cell_name, ► interactiveshell.py • run_ast_nodes • 3448 • if await self.run_code(code, result, async_=asy): ► interactiveshell.py • run_code • 3508 • exec(code_obj, self.user_global_ns, self.user_ns) ► 903290931.py • <module> • 4 • g.initiateUser(email) ► GoogleWorkspace.py • initiateUser • 30 • created = account.create() ► GoogleAccounts.py • create • 143 • debug(url) ► log.py • debug • 26 • log(f"DEBUG: {e}", p=False, caller=inspect.stack()) ►  => DEBUG: https://accounts.google.com/v3/signin/identifier?ifkv=ARZ0qKIyRSZG6jV0Um4ZmPCuNhyxkenu80Q-Q5PpGnXu_oalL47cY8m-wgICKakZzUFl8TJd0r5z&flowName=GlifWebSignIn&flowEntry=ServiceLogin&dsh=S-1878437344%3A1712338283219389&theme=mn&ddm=0 
runpy.py • _run_module_as_main • 196 • return _run_code(code, main_globals, None, ► runpy.py • _run_code • 86 • exec(code, run_globals) ► ipykernel_launcher.py • <module> • 17 • app.launch_new_instance() ► application.py • launch_instance • 978 • app.start() ► kernelapp.py • start • 712 • self.io_loop.start() ► asyncio.py • start • 215 • self.asyncio_loop.run_forever() ► base_events.py • run_forever • 600 • self._run_once() ► base_events.py • _run_once • 1896 • handle._run() ► events.py • _run • 80 • self._context.run(self._callback, *self._args) ► kernelbase.py • dispatch_queue • 510 • await self.process_one() ► kernelbase.py • process_one • 499 • await dispatch(*args) ► kernelbase.py • dispatch_shell • 406 • await result ► kernelbase.py • execute_request • 730 • reply_content = await reply_content ► ipkernel.py • do_execute • 383 • res = shell.run_cell( ► zmqshell.py • run_cell • 528 • return super().run_cell(*args, **kwargs) ► interactiveshell.py • run_cell • 3009 • result = self._run_cell( ► interactiveshell.py • _run_cell • 3064 • result = runner(coro) ► async_helpers.py • _pseudo_sync_runner • 129 • coro.send(None) ► interactiveshell.py • run_cell_async • 3269 • has_raised = await self.run_ast_nodes(code_ast.body, cell_name, ► interactiveshell.py • run_ast_nodes • 3448 • if await self.run_code(code, result, async_=asy): ► interactiveshell.py • run_code • 3508 • exec(code_obj, self.user_global_ns, self.user_ns) ► 903290931.py • <module> • 4 • g.initiateUser(email) ► GoogleWorkspace.py • initiateUser • 32 • debug("Retrying...") ► log.py • debug • 26 • log(f"DEBUG: {e}", p=False, caller=inspect.stack()) ►  => DEBUG: Retrying... 
runpy.py • _run_module_as_main • 196 • return _run_code(code, main_globals, None, ► runpy.py • _run_code • 86 • exec(code, run_globals) ► ipykernel_launcher.py • <module> • 17 • app.launch_new_instance() ► application.py • launch_instance • 978 • app.start() ► kernelapp.py • start • 712 • self.io_loop.start() ► asyncio.py • start • 215 • self.asyncio_loop.run_forever() ► base_events.py • run_forever • 600 • self._run_once() ► base_events.py • _run_once • 1896 • handle._run() ► events.py • _run • 80 • self._context.run(self._callback, *self._args) ► kernelbase.py • dispatch_queue • 510 • await self.process_one() ► kernelbase.py • process_one • 499 • await dispatch(*args) ► kernelbase.py • dispatch_shell • 406 • await result ► kernelbase.py • execute_request • 730 • reply_content = await reply_content ► ipkernel.py • do_execute • 383 • res = shell.run_cell( ► zmqshell.py • run_cell • 528 • return super().run_cell(*args, **kwargs) ► interactiveshell.py • run_cell • 3009 • result = self._run_cell( ► interactiveshell.py • _run_cell • 3064 • result = runner(coro) ► async_helpers.py • _pseudo_sync_runner • 129 • coro.send(None) ► interactiveshell.py • run_cell_async • 3269 • has_raised = await self.run_ast_nodes(code_ast.body, cell_name, ► interactiveshell.py • run_ast_nodes • 3448 • if await self.run_code(code, result, async_=asy): ► interactiveshell.py • run_code • 3508 • exec(code_obj, self.user_global_ns, self.user_ns) ► 903290931.py • <module> • 4 • g.initiateUser(email) ► GoogleWorkspace.py • initiateUser • 33 • created = account.create() ► GoogleAccounts.py • create • 108 • info('loading browser...') ► log.py • info • 19 • log(f"INFO: {e}", p=False, caller=inspect.stack()) ►  => INFO: loading browser... 
runpy.py • _run_module_as_main • 196 • return _run_code(code, main_globals, None, ► runpy.py • _run_code • 86 • exec(code, run_globals) ► ipykernel_launcher.py • <module> • 17 • app.launch_new_instance() ► application.py • launch_instance • 978 • app.start() ► kernelapp.py • start • 712 • self.io_loop.start() ► asyncio.py • start • 215 • self.asyncio_loop.run_forever() ► base_events.py • run_forever • 600 • self._run_once() ► base_events.py • _run_once • 1896 • handle._run() ► events.py • _run • 80 • self._context.run(self._callback, *self._args) ► kernelbase.py • dispatch_queue • 510 • await self.process_one() ► kernelbase.py • process_one • 499 • await dispatch(*args) ► kernelbase.py • dispatch_shell • 406 • await result ► kernelbase.py • execute_request • 730 • reply_content = await reply_content ► ipkernel.py • do_execute • 383 • res = shell.run_cell( ► zmqshell.py • run_cell • 528 • return super().run_cell(*args, **kwargs) ► interactiveshell.py • run_cell • 3009 • result = self._run_cell( ► interactiveshell.py • _run_cell • 3064 • result = runner(coro) ► async_helpers.py • _pseudo_sync_runner • 129 • coro.send(None) ► interactiveshell.py • run_cell_async • 3269 • has_raised = await self.run_ast_nodes(code_ast.body, cell_name, ► interactiveshell.py • run_ast_nodes • 3448 • if await self.run_code(code, result, async_=asy): ► interactiveshell.py • run_code • 3508 • exec(code_obj, self.user_global_ns, self.user_ns) ► 903290931.py • <module> • 4 • g.initiateUser(email) ► GoogleWorkspace.py • initiateUser • 33 • created = account.create() ► GoogleAccounts.py • create • 111 • debug('waiting for signin') ► log.py • debug • 26 • log(f"DEBUG: {e}", p=False, caller=inspect.stack()) ►  => DEBUG: waiting for signin 
